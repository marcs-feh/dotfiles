### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left  h
set $down  j
set $up    k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu bemenu-run
set $web_browser brave

exec swaybg -i ~/pics/leaves_dark.jpg

### Output configuration
#
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
# 		  timeout 300 'swaylock -f' \
# 		  timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
# 		  before-sleep 'swaylock -f'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

input "10248:257:MSFT0001:01_2808:0101_Touchpad" {
	dwt enabled
		tap enabled
		natural_scroll disabled
		middle_emulation enabled
}

input "type:keyboard" {
	xkb_layout us
		xkb_options caps:swapescape
}

# Start a terminal
bindsym $mod+Return exec $term
bindsym $mod+p exec $menu
bindsym $mod+b exec $web_browser
bindsym $mod+q kill

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+x exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
# Move your focus around
# bindsym Mod1+Tab  focus back_and_forth
bindsym $mod+$left  focus left
bindsym $mod+$down  focus down
bindsym $mod+$up    focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left  focus left
bindsym $mod+Down  focus down
bindsym $mod+Up    focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left  move left
bindsym $mod+Shift+$down  move down
bindsym $mod+Shift+$up    move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left   move left
bindsym $mod+Shift+Down   move down
bindsym $mod+Shift+Up     move up
bindsym $mod+Shift+Right  move right
#
# Workspaces:
#

bindsym $mod+Tab workspace back_and_forth
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+s splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+r layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
bindsym $mod+d focus child

# Alt tabbing
bindsym Mod1+Tab focus next
bindsym Mod1+Shift+Tab focus next

# Resizing without a dedicated mode.
bindsym $mod+Ctrl+$left  resize shrink width  30px
bindsym $mod+Ctrl+$down  resize grow height   30px
bindsym $mod+Ctrl+$up    resize shrink height 30px
bindsym $mod+Ctrl+$right resize grow width    30px
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
	bindsym $left  resize shrink width 10px
		bindsym $down  resize grow height 10px
		bindsym $up    resize shrink height 10px
		bindsym $right resize grow width 10px
		bindsym Left  resize shrink width 10px
		bindsym Down  resize grow height 10px
		bindsym Up    resize shrink height 10px
		bindsym Right resize grow width 10px
		bindsym Return mode "default"
		bindsym Escape mode "default"
}

bindsym $mod+Shift+r mode "resize"

# Appearance
# Element               Border     Bg         Text
client.focused          #1d2021ff  #303536ff  #c4dc9bff
client.unfocused        #1d2021ff  #1d2021ff  #606a6cff
client.focused_inactive #1d2021ff  #1d2021ff  #606a6cff

# Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
	position bottom
	status_command i3status-rs
		colors {
			statusline #f4e5bfff
			background #1d2021ff
			separator  #1d2021ff
			inactive_workspace #1d2021ff #1d2021ff #606a6cff
			active_workspace   #c4dc9bff #303536ff #c4dc9bff
			focused_workspace  #81aeceff #81aeceff #1d2021ff
		}
}

